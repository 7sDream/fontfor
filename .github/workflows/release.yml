name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  tag_check_deps_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install cargo-outdated
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-outdated
          version: latest
          use-tool-cache: true
      - name: Check deps crates version
        uses: actions-rs/cargo@v1
        with:
          command: outdated
          args: -R --exit-code 1 --verbose
      - name: Check Lock file updated
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
          args: --locked
      - name: Security audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  release_build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install freetype and fontconfig for macOS
        if: ${{ runner.os == 'macOS' }}
        run: |
          brew install pkg-config cmake freetype fontconfig
          pkg-config --libs --static fontconfig
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build use release profile
        run: cargo build --all-targets --all-features -vv --release
      - name: Upload release binary to artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-${{ runner.os }}
          path: target/release/fontfor
  create_release:
    needs: [tag_check_deps_version, release_build]
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Multi line outputs needs escaped before echo, ref:
      # https://github.community/t5/GitHub-Actions/set-output-Truncates-Multiline-Strings/td-p/37870
      - name: Get Tag Name and message
        id: tag
        run: |
          echo "::set-output name=name::$(echo $GITHUB_REF | cut -d/ -f3)"
          message=$(echo "${{ github.event.head_commit.message }}" | tail -n +3)
          message="${message//'%'/'%25'}"
          message="${message//$'\n'/'%0A'}"
          message="${message//$'\r'/'%0D'}"
          echo "::set-output name=message::$message"
      - name: Create release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.release_token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.tag.outputs.name }}
          body: ${{ steps.tag.outputs.message }}
          draft: false
          prerelease: false
  upload_binary:
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download Linux binary from artifact
        uses: actions/download-artifact@v2
        with:
          name: release-Linux
          path: artifacts/release-Linux
      - name: Download macOS binary from artifact
        uses: actions/download-artifact@v2
        with:
          name: release-macOS
          path: artifacts/release-macOS
      - name: Show artifacts content
        run: ls -a -l -R artifacts
      - name: Upload Linux binary asset to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_upload_url }}
          asset_path: ./artifacts/release-Linux/fontfor
          asset_name: fontfor-Linux
          asset_content_type: application/octet-stream
      - name: Upload macOS binary asset to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_upload_url }}
          asset_path: ./artifacts/release-macOS/fontfor
          asset_name: fontfor-macOS
          asset_content_type: application/octet-stream
